version: "3.9"

services:
  db:
    image: postgres:${POSTGRES_MAJOR:-16}
    container_name: ${DB_CONTAINER_NAME:-ooo_db}
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "${DB_PORT_HOST:-5432}:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${BACKEND_CONTAINER_NAME:-ooo_backend}
    env_file:
      - ./.env
    environment:
      - ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS
      - ConnectionStrings__DefaultConnection
      - Jwt__Audience
      - Jwt__Issuer
      - Jwt__Key
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads:/app/wwwroot/uploads
    ports:
      - "${BACKEND_PORT_HOST:-8080}:8080"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ${FRONTEND_CONTAINER_NAME:-ooo_frontend}
    depends_on:
      - backend
    env_file:
      - ./.env
    ports:
      - "${FRONTEND_PORT_HOST:-5173}:80"

volumes:
  pgdata:
  uploads:
